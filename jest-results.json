{
  "numFailedTestSuites": 0,
  "numFailedTests": 0,
  "numPassedTestSuites": 16,
  "numPassedTests": 282,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 16,
  "numTotalTests": 282,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1759581174278,
  "success": true,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Offline Validation Tests", "Network State Detection"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Network State Detection should detect when device goes offline",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should detect when device goes offline"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Network State Detection"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Network State Detection should detect when device comes back online",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should detect when device comes back online"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Network State Detection"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Network State Detection should detect network quality (wifi vs cellular)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should detect network quality (wifi vs cellular)"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Network State Detection"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Network State Detection should notify listeners of network state changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should notify listeners of network state changes"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Offline Action Queue"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Offline Action Queue should queue actions when offline",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should queue actions when offline"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Offline Action Queue"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Offline Action Queue should persist queued actions to storage",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should persist queued actions to storage"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Offline Action Queue"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Offline Action Queue should track pending actions count",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should track pending actions count"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Offline Action Queue"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Offline Action Queue should handle multiple action types",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle multiple action types"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Offline Action Queue"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Offline Action Queue should include retry metadata in queued actions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should include retry metadata in queued actions"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Offline Cache Management"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Offline Cache Management should cache API responses",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should cache API responses"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Offline Cache Management"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Offline Cache Management should retrieve cached responses within maxAge",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should retrieve cached responses within maxAge"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Offline Cache Management"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Offline Cache Management should return null for expired cache",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return null for expired cache"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Offline Cache Management"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Offline Cache Management should clear all cached data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should clear all cached data"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Offline Cache Management"],
          "duration": 38,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Offline Cache Management should handle cache corruption gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle cache corruption gracefully"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Sync Mechanism"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Sync Mechanism should sync actions when coming back online",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should sync actions when coming back online"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Sync Mechanism"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Sync Mechanism should not sync when offline",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should not sync when offline"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Sync Mechanism"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Sync Mechanism should implement exponential backoff for failed syncs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should implement exponential backoff for failed syncs"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Sync Mechanism"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Sync Mechanism should remove actions after max retries",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove actions after max retries"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Sync Mechanism"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Sync Mechanism should handle concurrent sync attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle concurrent sync attempts"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Sync Mechanism"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Sync Mechanism should force sync manually",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should force sync manually"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Data Integrity"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Data Integrity should preserve action order in queue",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should preserve action order in queue"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Data Integrity"],
          "duration": 302,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Data Integrity should handle storage failures gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle storage failures gracefully"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Data Integrity"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Data Integrity should validate cached data structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate cached data structure"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Edge Cases"],
          "duration": 103,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Edge Cases should handle rapid online/offline transitions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle rapid online/offline transitions"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Edge Cases"],
          "duration": 601,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Edge Cases should handle empty action queues",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle empty action queues"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Edge Cases"],
          "duration": 302,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Edge Cases should handle malformed action payloads",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle malformed action payloads"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Edge Cases"],
          "duration": 301,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Edge Cases should handle unknown action types",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle unknown action types"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Edge Cases"],
          "duration": 302,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Edge Cases should handle large payloads",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle large payloads"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Performance"],
          "duration": 310,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Performance should handle high-frequency action queuing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle high-frequency action queuing"
        },
        {
          "ancestorTitles": ["Offline Validation Tests", "Performance"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Offline Validation Tests Performance should handle cache operations efficiently",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle cache operations efficiently"
        }
      ],
      "endTime": 1759581178602,
      "message": "",
      "name": "/home/jsnni/projects/web-apps/Kid-Friendly-Map-v1/__tests__/offline-validation.test.ts",
      "startTime": 1759581174506,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Performance Tests", "Component Rendering Performance"],
          "duration": 50,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Tests Component Rendering Performance should render SafetyPanel within performance budget",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should render SafetyPanel within performance budget"
        },
        {
          "ancestorTitles": ["Performance Tests", "Component Rendering Performance"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Tests Component Rendering Performance should handle large lists efficiently",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle large lists efficiently"
        },
        {
          "ancestorTitles": ["Performance Tests", "Memory Usage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Tests Memory Usage should not create memory leaks in stores",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not create memory leaks in stores"
        },
        {
          "ancestorTitles": ["Performance Tests", "Bundle Size Analysis"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Tests Bundle Size Analysis should keep core modules under size limit",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should keep core modules under size limit"
        },
        {
          "ancestorTitles": ["Performance Tests", "Network Performance"],
          "duration": 101,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Tests Network Performance should handle API requests efficiently",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle API requests efficiently"
        },
        {
          "ancestorTitles": ["Performance Tests", "Network Performance"],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Tests Network Performance should batch multiple requests efficiently",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should batch multiple requests efficiently"
        },
        {
          "ancestorTitles": ["Performance Tests", "Storage Performance"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Tests Storage Performance should handle storage operations efficiently",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle storage operations efficiently"
        },
        {
          "ancestorTitles": ["Performance Tests", "Animation Performance"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Tests Animation Performance should maintain 60fps during animations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should maintain 60fps during animations"
        }
      ],
      "endTime": 1759581178937,
      "message": "",
      "name": "/home/jsnni/projects/web-apps/Kid-Friendly-Map-v1/__tests__/performance.test.ts",
      "startTime": 1759581178727,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Monitoring System Tests", "Initialization"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Initialization should initialize with default config",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should initialize with default config"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Initialization"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Initialization should accept custom configuration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should accept custom configuration"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Initialization"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Initialization should work without Sentry DSN",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should work without Sentry DSN"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Error Tracking"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Error Tracking should capture errors with context",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should capture errors with context"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Error Tracking"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Error Tracking should capture errors with metadata",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should capture errors with metadata"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Error Tracking"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Error Tracking should track different severity levels",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should track different severity levels"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Error Tracking"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Error Tracking should associate errors with user ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should associate errors with user ID"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Error Tracking"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Error Tracking should clear user context",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should clear user context"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Performance Tracking"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Performance Tracking should track performance metrics",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should track performance metrics"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Performance Tracking"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Performance Tracking should track metrics with metadata",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should track metrics with metadata"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Performance Tracking"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Performance Tracking should use performance timer",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use performance timer"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Performance Tracking"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Performance Tracking should calculate average duration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should calculate average duration"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Performance Tracking"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Performance Tracking should alert on slow operations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should alert on slow operations"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Performance Tracking"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Performance Tracking should limit metrics in memory",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should limit metrics in memory"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "User Action Tracking"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests User Action Tracking should track user actions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should track user actions"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "User Action Tracking"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests User Action Tracking should track actions with metadata",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should track actions with metadata"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "User Action Tracking"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests User Action Tracking should calculate action rate",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should calculate action rate"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "User Action Tracking"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests User Action Tracking should limit actions in memory",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should limit actions in memory"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "System Health Monitoring"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests System Health Monitoring should report system health",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should report system health"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "System Health Monitoring"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests System Health Monitoring should detect memory pressure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should detect memory pressure"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "System Health Monitoring"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests System Health Monitoring should report network status",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should report network status"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "System Health Monitoring"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests System Health Monitoring should report backend status",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should report backend status"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Statistics and Reporting"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Statistics and Reporting should provide session statistics",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should provide session statistics"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Statistics and Reporting"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Statistics and Reporting should track error rate",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should track error rate"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Statistics and Reporting"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Statistics and Reporting should include health in statistics",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should include health in statistics"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Breadcrumbs"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Breadcrumbs should add custom breadcrumbs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should add custom breadcrumbs"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Breadcrumbs"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Breadcrumbs should add breadcrumbs with different categories",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should add breadcrumbs with different categories"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Data Management"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Data Management should flush monitoring data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should flush monitoring data"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Data Management"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Data Management should handle memory pressure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle memory pressure"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Error Handling"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Error Handling should handle Sentry initialization failure gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Sentry initialization failure gracefully"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Error Handling"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Error Handling should work without Sentry installed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should work without Sentry installed"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Error Handling"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Error Handling should handle malformed error objects",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle malformed error objects"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Integration"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Integration should integrate with offline manager",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should integrate with offline manager"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Integration"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Integration should integrate with backend health monitor",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should integrate with backend health monitor"
        },
        {
          "ancestorTitles": ["Monitoring System Tests", "Integration"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Monitoring System Tests Integration should track offline errors for later sync",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should track offline errors for later sync"
        }
      ],
      "endTime": 1759581179024,
      "message": "",
      "name": "/home/jsnni/projects/web-apps/Kid-Friendly-Map-v1/__tests__/monitoring.test.ts",
      "startTime": 1759581178940,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Error Handling Utils", "withRetry"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils withRetry should succeed on first attempt",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should succeed on first attempt"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "withRetry"],
          "duration": 302,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils withRetry should retry on failure and eventually succeed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should retry on failure and eventually succeed"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "withRetry"],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils withRetry should fail after max attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should fail after max attempts"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "withRetry"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils withRetry should respect shouldRetry function",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should respect shouldRetry function"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "SafeAsyncStorage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils SafeAsyncStorage should get item successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should get item successfully"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "SafeAsyncStorage"],
          "duration": 303,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils SafeAsyncStorage should return fallback value on get failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return fallback value on get failure"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "SafeAsyncStorage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils SafeAsyncStorage should set item successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should set item successfully"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "SafeAsyncStorage"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils SafeAsyncStorage should handle batch operations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle batch operations"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "Error message handling"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils Error message handling should provide user-friendly location error messages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should provide user-friendly location error messages"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "Error message handling"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils Error message handling should handle network errors appropriately",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle network errors appropriately"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "Error message handling"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils Error message handling should handle camera errors with permission context",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle camera errors with permission context"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "Safety Error Boundary"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils Safety Error Boundary should create error boundary with proper configuration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create error boundary with proper configuration"
        }
      ],
      "endTime": 1759581179699,
      "message": "",
      "name": "/home/jsnni/projects/web-apps/Kid-Friendly-Map-v1/__tests__/errorHandling.test.js",
      "startTime": 1759581179027,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Error Handling Utils", "withRetry"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils withRetry should succeed on first attempt",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should succeed on first attempt"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "withRetry"],
          "duration": 303,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils withRetry should retry on failure and eventually succeed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should retry on failure and eventually succeed"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "withRetry"],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils withRetry should fail after max attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should fail after max attempts"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "withRetry"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils withRetry should respect shouldRetry function",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should respect shouldRetry function"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "SafeAsyncStorage"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils SafeAsyncStorage should get item successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should get item successfully"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "SafeAsyncStorage"],
          "duration": 303,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils SafeAsyncStorage should return fallback value on get failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return fallback value on get failure"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "SafeAsyncStorage"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils SafeAsyncStorage should set item successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should set item successfully"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "SafeAsyncStorage"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils SafeAsyncStorage should handle batch operations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle batch operations"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "Error message handling"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils Error message handling should provide user-friendly location error messages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should provide user-friendly location error messages"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "Error message handling"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils Error message handling should handle network errors appropriately",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle network errors appropriately"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "Error message handling"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils Error message handling should handle camera errors with permission context",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle camera errors with permission context"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "Safety Error Boundary"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils Safety Error Boundary should create error boundary with proper configuration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create error boundary with proper configuration"
        }
      ],
      "endTime": 1759581180380,
      "message": "",
      "name": "/home/jsnni/projects/web-apps/Kid-Friendly-Map-v1/__tests__/errorHandling.test.ts",
      "startTime": 1759581179718,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["useRouteORS"],
          "duration": 17,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useRouteORS should return initial state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should return initial state"
        },
        {
          "ancestorTitles": ["useRouteORS"],
          "duration": 54,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useRouteORS should fetch route when valid coordinates are provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch route when valid coordinates are provided"
        },
        {
          "ancestorTitles": ["useRouteORS"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useRouteORS should not fetch when coordinates are invalid",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should not fetch when coordinates are invalid"
        },
        {
          "ancestorTitles": ["useRouteORS"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useRouteORS should not fetch when disabled",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should not fetch when disabled"
        },
        {
          "ancestorTitles": ["useRouteORS"],
          "duration": 53,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useRouteORS should handle API errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle API errors"
        },
        {
          "ancestorTitles": ["useRouteORS"],
          "duration": 52,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useRouteORS should handle missing API key",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing API key"
        },
        {
          "ancestorTitles": ["useRouteORS"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useRouteORS should use custom profile when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should use custom profile when provided"
        },
        {
          "ancestorTitles": ["useRouteORS"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useRouteORS should abort previous request when coordinates change",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should abort previous request when coordinates change"
        },
        {
          "ancestorTitles": ["useRouteORS"],
          "duration": 53,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useRouteORS should provide refetch function",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should provide refetch function"
        },
        {
          "ancestorTitles": ["useRouteORS"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useRouteORS should handle refetch with no coordinates",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle refetch with no coordinates"
        },
        {
          "ancestorTitles": ["useRouteORS"],
          "duration": 51,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useRouteORS should parse summary correctly when includeEta is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should parse summary correctly when includeEta is false"
        },
        {
          "ancestorTitles": ["useRouteORS"],
          "duration": 52,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useRouteORS should handle malformed response data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle malformed response data"
        }
      ],
      "endTime": 1759581180825,
      "message": "",
      "name": "/home/jsnni/projects/web-apps/Kid-Friendly-Map-v1/__tests__/useRouteORS.test.ts",
      "startTime": 1759581180398,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Performance Tests", "Component Rendering Performance"],
          "duration": 51,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Tests Component Rendering Performance should render SafetyPanel within performance budget",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should render SafetyPanel within performance budget"
        },
        {
          "ancestorTitles": ["Performance Tests", "Component Rendering Performance"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Tests Component Rendering Performance should handle large lists efficiently",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle large lists efficiently"
        },
        {
          "ancestorTitles": ["Performance Tests", "Memory Usage"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Tests Memory Usage should not create memory leaks in stores",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not create memory leaks in stores"
        },
        {
          "ancestorTitles": ["Performance Tests", "Bundle Size Analysis"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Tests Bundle Size Analysis should keep core modules under size limit",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should keep core modules under size limit"
        },
        {
          "ancestorTitles": ["Performance Tests", "Network Performance"],
          "duration": 101,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Tests Network Performance should handle API requests efficiently",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle API requests efficiently"
        },
        {
          "ancestorTitles": ["Performance Tests", "Network Performance"],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Tests Network Performance should batch multiple requests efficiently",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should batch multiple requests efficiently"
        },
        {
          "ancestorTitles": ["Performance Tests", "Storage Performance"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Tests Storage Performance should handle storage operations efficiently",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle storage operations efficiently"
        },
        {
          "ancestorTitles": ["Performance Tests", "Animation Performance"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Tests Animation Performance should maintain 60fps during animations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should maintain 60fps during animations"
        }
      ],
      "endTime": 1759581181055,
      "message": "",
      "name": "/home/jsnni/projects/web-apps/Kid-Friendly-Map-v1/__tests__/performance.test.js",
      "startTime": 1759581180853,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Validation Utils", "validateLocation"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateLocation should validate correct location data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate correct location data"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateLocation"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateLocation should reject invalid latitude",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject invalid latitude"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateLocation"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateLocation should reject invalid longitude",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject invalid longitude"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateLocation"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateLocation should warn about low accuracy",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should warn about low accuracy"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateLocation"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateLocation should warn about old timestamp",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should warn about old timestamp"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateLocation"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateLocation should reject null/undefined location",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject null/undefined location"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateSafeZone"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateSafeZone should validate correct safe zone data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate correct safe zone data"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateSafeZone"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateSafeZone should reject safe zone without ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject safe zone without ID"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateSafeZone"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateSafeZone should reject negative radius",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject negative radius"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateSafeZone"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateSafeZone should warn about very small radius",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should warn about very small radius"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateEmergencyContact"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateEmergencyContact should validate correct emergency contact",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate correct emergency contact"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateEmergencyContact"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateEmergencyContact should reject contact without phone",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject contact without phone"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateEmergencyContact"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateEmergencyContact should reject invalid phone format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject invalid phone format"
        },
        {
          "ancestorTitles": ["Validation Utils", "validatePhotoCheckIn"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validatePhotoCheckIn should validate correct photo check-in",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate correct photo check-in"
        },
        {
          "ancestorTitles": ["Validation Utils", "validatePhotoCheckIn"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validatePhotoCheckIn should reject check-in without place ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject check-in without place ID"
        },
        {
          "ancestorTitles": ["Validation Utils", "validatePhotoCheckIn"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validatePhotoCheckIn should accept file:// URLs for mobile",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should accept file:// URLs for mobile"
        },
        {
          "ancestorTitles": ["Validation Utils", "validatePhotoCheckIn"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validatePhotoCheckIn should warn about old check-in",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should warn about old check-in"
        },
        {
          "ancestorTitles": ["Validation Utils", "validatePIN"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validatePIN should validate correct PIN",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate correct PIN"
        },
        {
          "ancestorTitles": ["Validation Utils", "validatePIN"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validatePIN should reject short PIN",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject short PIN"
        },
        {
          "ancestorTitles": ["Validation Utils", "validatePIN"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validatePIN should reject non-numeric PIN",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject non-numeric PIN"
        },
        {
          "ancestorTitles": ["Validation Utils", "validatePIN"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validatePIN should warn about weak PIN",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should warn about weak PIN"
        },
        {
          "ancestorTitles": ["Validation Utils", "validatePIN"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validatePIN should warn about sequential PIN",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should warn about sequential PIN"
        },
        {
          "ancestorTitles": ["Validation Utils", "sanitizeInput"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils sanitizeInput should sanitize HTML characters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should sanitize HTML characters"
        },
        {
          "ancestorTitles": ["Validation Utils", "sanitizeInput"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils sanitizeInput should trim whitespace",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should trim whitespace"
        },
        {
          "ancestorTitles": ["Validation Utils", "sanitizeInput"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils sanitizeInput should limit length",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should limit length"
        },
        {
          "ancestorTitles": ["Validation Utils", "sanitizeInput"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils sanitizeInput should handle non-string input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle non-string input"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateDistance"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateDistance should validate reasonable distance",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate reasonable distance"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateDistance"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateDistance should reject negative distance",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject negative distance"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateDistance"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateDistance should reject unrealistic distance",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject unrealistic distance"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateDistance"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateDistance should warn about very large distance",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should warn about very large distance"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateDistance"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateDistance should reject NaN distance",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject NaN distance"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "withRetry"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils withRetry should succeed on first attempt",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should succeed on first attempt"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "withRetry"],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils withRetry should retry on failure and eventually succeed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should retry on failure and eventually succeed"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "withRetry"],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils withRetry should fail after max attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should fail after max attempts"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "withRetry"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils withRetry should respect shouldRetry function",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should respect shouldRetry function"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "handleLocationError"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils handleLocationError should handle permission denied error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denied error"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "handleLocationError"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils handleLocationError should handle position unavailable error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle position unavailable error"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "handleLocationError"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils handleLocationError should handle timeout error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle timeout error"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "handleLocationError"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils handleLocationError should handle unknown error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle unknown error"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "handleCameraError"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils handleCameraError should handle permission error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission error"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "handleCameraError"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils handleCameraError should handle camera unavailable error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle camera unavailable error"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "handleCameraError"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils handleCameraError should handle cancelled error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle cancelled error"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "handleCameraError"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils handleCameraError should handle unknown camera error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle unknown camera error"
        },
        {
          "ancestorTitles": ["Safety Integration Tests", "Photo Check-in Workflow"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Safety Integration Tests Photo Check-in Workflow should validate complete photo check-in flow",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate complete photo check-in flow"
        },
        {
          "ancestorTitles": ["Safety Integration Tests", "Safe Zone Setup Workflow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Safety Integration Tests Safe Zone Setup Workflow should validate complete safe zone setup",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate complete safe zone setup"
        },
        {
          "ancestorTitles": ["Safety Integration Tests", "Emergency Contact Setup Workflow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Safety Integration Tests Emergency Contact Setup Workflow should validate emergency contact setup",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate emergency contact setup"
        },
        {
          "ancestorTitles": ["Safety Integration Tests", "PIN Security Workflow"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Safety Integration Tests PIN Security Workflow should validate PIN setup with security checks",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate PIN setup with security checks"
        }
      ],
      "endTime": 1759581181169,
      "message": "",
      "name": "/home/jsnni/projects/web-apps/Kid-Friendly-Map-v1/__tests__/safety.test.js",
      "startTime": 1759581181062,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Validation Utils", "validateLocation"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateLocation should validate correct location data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate correct location data"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateLocation"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateLocation should reject invalid latitude",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject invalid latitude"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateLocation"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateLocation should reject invalid longitude",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject invalid longitude"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateLocation"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateLocation should warn about low accuracy",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should warn about low accuracy"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateLocation"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateLocation should warn about old timestamp",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should warn about old timestamp"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateLocation"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateLocation should reject null/undefined location",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject null/undefined location"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateSafeZone"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateSafeZone should validate correct safe zone data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate correct safe zone data"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateSafeZone"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateSafeZone should reject safe zone without ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject safe zone without ID"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateSafeZone"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateSafeZone should reject negative radius",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject negative radius"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateSafeZone"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateSafeZone should warn about very small radius",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should warn about very small radius"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateEmergencyContact"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateEmergencyContact should validate correct emergency contact",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate correct emergency contact"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateEmergencyContact"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateEmergencyContact should reject contact without phone",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject contact without phone"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateEmergencyContact"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateEmergencyContact should reject invalid phone format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject invalid phone format"
        },
        {
          "ancestorTitles": ["Validation Utils", "validatePhotoCheckIn"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validatePhotoCheckIn should validate correct photo check-in",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate correct photo check-in"
        },
        {
          "ancestorTitles": ["Validation Utils", "validatePhotoCheckIn"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validatePhotoCheckIn should reject check-in without place ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject check-in without place ID"
        },
        {
          "ancestorTitles": ["Validation Utils", "validatePhotoCheckIn"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validatePhotoCheckIn should accept file:// URLs for mobile",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should accept file:// URLs for mobile"
        },
        {
          "ancestorTitles": ["Validation Utils", "validatePhotoCheckIn"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validatePhotoCheckIn should warn about old check-in",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should warn about old check-in"
        },
        {
          "ancestorTitles": ["Validation Utils", "validatePIN"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validatePIN should validate correct PIN",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate correct PIN"
        },
        {
          "ancestorTitles": ["Validation Utils", "validatePIN"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validatePIN should reject short PIN",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject short PIN"
        },
        {
          "ancestorTitles": ["Validation Utils", "validatePIN"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validatePIN should reject non-numeric PIN",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject non-numeric PIN"
        },
        {
          "ancestorTitles": ["Validation Utils", "validatePIN"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validatePIN should warn about weak PIN",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should warn about weak PIN"
        },
        {
          "ancestorTitles": ["Validation Utils", "validatePIN"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validatePIN should warn about sequential PIN",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should warn about sequential PIN"
        },
        {
          "ancestorTitles": ["Validation Utils", "sanitizeInput"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils sanitizeInput should sanitize HTML characters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should sanitize HTML characters"
        },
        {
          "ancestorTitles": ["Validation Utils", "sanitizeInput"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils sanitizeInput should trim whitespace",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should trim whitespace"
        },
        {
          "ancestorTitles": ["Validation Utils", "sanitizeInput"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils sanitizeInput should limit length",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should limit length"
        },
        {
          "ancestorTitles": ["Validation Utils", "sanitizeInput"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils sanitizeInput should handle non-string input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle non-string input"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateDistance"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateDistance should validate reasonable distance",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate reasonable distance"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateDistance"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateDistance should reject negative distance",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject negative distance"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateDistance"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateDistance should reject unrealistic distance",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject unrealistic distance"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateDistance"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateDistance should warn about very large distance",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should warn about very large distance"
        },
        {
          "ancestorTitles": ["Validation Utils", "validateDistance"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation Utils validateDistance should reject NaN distance",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reject NaN distance"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "withRetry"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils withRetry should succeed on first attempt",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should succeed on first attempt"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "withRetry"],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils withRetry should retry on failure and eventually succeed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should retry on failure and eventually succeed"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "withRetry"],
          "duration": 18,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils withRetry should fail after max attempts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should fail after max attempts"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "withRetry"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils withRetry should respect shouldRetry function",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should respect shouldRetry function"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "handleLocationError"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils handleLocationError should handle permission denied error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission denied error"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "handleLocationError"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils handleLocationError should handle position unavailable error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle position unavailable error"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "handleLocationError"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils handleLocationError should handle timeout error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle timeout error"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "handleLocationError"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils handleLocationError should handle unknown error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle unknown error"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "handleCameraError"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils handleCameraError should handle permission error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle permission error"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "handleCameraError"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils handleCameraError should handle camera unavailable error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle camera unavailable error"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "handleCameraError"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils handleCameraError should handle cancelled error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle cancelled error"
        },
        {
          "ancestorTitles": ["Error Handling Utils", "handleCameraError"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Error Handling Utils handleCameraError should handle unknown camera error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle unknown camera error"
        },
        {
          "ancestorTitles": ["Safety Integration Tests", "Photo Check-in Workflow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Safety Integration Tests Photo Check-in Workflow should validate complete photo check-in flow",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate complete photo check-in flow"
        },
        {
          "ancestorTitles": ["Safety Integration Tests", "Safe Zone Setup Workflow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Safety Integration Tests Safe Zone Setup Workflow should validate complete safe zone setup",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate complete safe zone setup"
        },
        {
          "ancestorTitles": ["Safety Integration Tests", "Emergency Contact Setup Workflow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Safety Integration Tests Emergency Contact Setup Workflow should validate emergency contact setup",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate emergency contact setup"
        },
        {
          "ancestorTitles": ["Safety Integration Tests", "PIN Security Workflow"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Safety Integration Tests PIN Security Workflow should validate PIN setup with security checks",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate PIN setup with security checks"
        }
      ],
      "endTime": 1759581181300,
      "message": "",
      "name": "/home/jsnni/projects/web-apps/Kid-Friendly-Map-v1/__tests__/safety.test.ts",
      "startTime": 1759581181172,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["ORS Service Integration", "Basic Routing"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ORS Service Integration Basic Routing should get walking route successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should get walking route successfully"
        },
        {
          "ancestorTitles": ["ORS Service Integration", "Basic Routing"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ORS Service Integration Basic Routing should handle API errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle API errors gracefully"
        },
        {
          "ancestorTitles": ["ORS Service Integration", "Basic Routing"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ORS Service Integration Basic Routing should retry on network failures",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should retry on network failures"
        },
        {
          "ancestorTitles": ["ORS Service Integration", "Kid-Friendly Features"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ORS Service Integration Kid-Friendly Features should apply kid-friendly modifications",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply kid-friendly modifications"
        },
        {
          "ancestorTitles": ["ORS Service Integration", "Kid-Friendly Features"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ORS Service Integration Kid-Friendly Features should calculate safety scores for kid routes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should calculate safety scores for kid routes"
        },
        {
          "ancestorTitles": ["ORS Service Integration", "Accessibility Features"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ORS Service Integration Accessibility Features should request wheelchair accessible routes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should request wheelchair accessible routes"
        },
        {
          "ancestorTitles": ["OTP2 Service Integration", "Trip Planning"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OTP2 Service Integration Trip Planning should plan transit trip successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should plan transit trip successfully"
        },
        {
          "ancestorTitles": ["OTP2 Service Integration", "Trip Planning"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OTP2 Service Integration Trip Planning should handle no routes found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle no routes found"
        },
        {
          "ancestorTitles": ["OTP2 Service Integration", "Kid-Friendly Transit"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OTP2 Service Integration Kid-Friendly Transit should apply kid-friendly transit options",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should apply kid-friendly transit options"
        },
        {
          "ancestorTitles": ["OTP2 Service Integration", "Real-time Data"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OTP2 Service Integration Real-time Data should fetch stop information",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch stop information"
        },
        {
          "ancestorTitles": ["OTP2 Service Integration", "Real-time Data"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "OTP2 Service Integration Real-time Data should fetch real-time arrivals",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch real-time arrivals"
        },
        {
          "ancestorTitles": ["Unified Routing Service Integration"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Unified Routing Service Integration should combine ORS and OTP2 routes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 9,
          "retryReasons": [],
          "status": "passed",
          "title": "should combine ORS and OTP2 routes"
        },
        {
          "ancestorTitles": ["Unified Routing Service Integration"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Unified Routing Service Integration should calculate safety scores correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should calculate safety scores correctly"
        },
        {
          "ancestorTitles": ["Unified Routing Service Integration"],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Unified Routing Service Integration should handle accessibility preferences",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle accessibility preferences"
        },
        {
          "ancestorTitles": ["Unified Routing Service Integration"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Unified Routing Service Integration should sort routes by preference",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should sort routes by preference"
        },
        {
          "ancestorTitles": ["Unified Routing Service Integration"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Unified Routing Service Integration should handle API failures gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle API failures gracefully"
        },
        {
          "ancestorTitles": ["Unified Routing Service Integration"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Unified Routing Service Integration should return empty array when all services fail",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return empty array when all services fail"
        },
        {
          "ancestorTitles": ["Performance and Caching"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance and Caching should cache ORS route responses",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should cache ORS route responses"
        },
        {
          "ancestorTitles": ["Performance and Caching"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance and Caching should handle concurrent requests efficiently",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle concurrent requests efficiently"
        }
      ],
      "endTime": 1759581182697,
      "message": "",
      "name": "/home/jsnni/projects/web-apps/Kid-Friendly-Map-v1/__tests__/routing-integration.test.ts",
      "startTime": 1759581181308,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["MapLibreRouteView"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MapLibreRouteView should render without crashing (renders map content)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should render without crashing (renders map content)"
        },
        {
          "ancestorTitles": ["MapLibreRouteView"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MapLibreRouteView should render with route data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should render with route data"
        },
        {
          "ancestorTitles": ["MapLibreRouteView"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MapLibreRouteView should render origin and destination markers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should render origin and destination markers"
        },
        {
          "ancestorTitles": ["MapLibreRouteView"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MapLibreRouteView should render transit stations when enabled",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should render transit stations when enabled"
        },
        {
          "ancestorTitles": ["MapLibreRouteView"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MapLibreRouteView should not render transit stations when disabled",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not render transit stations when disabled"
        },
        {
          "ancestorTitles": ["MapLibreRouteView"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MapLibreRouteView should create fallback route when no route data provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should create fallback route when no route data provided"
        },
        {
          "ancestorTitles": ["MapLibreRouteView"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MapLibreRouteView should not render route when no origin or destination",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not render route when no origin or destination"
        },
        {
          "ancestorTitles": ["MapLibreRouteView"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MapLibreRouteView should handle station press events",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle station press events"
        },
        {
          "ancestorTitles": ["MapLibreRouteView"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MapLibreRouteView should use custom testID when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use custom testID when provided"
        },
        {
          "ancestorTitles": ["MapLibreRouteView"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MapLibreRouteView should compute center correctly with route data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should compute center correctly with route data"
        },
        {
          "ancestorTitles": ["MapLibreRouteView"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "MapLibreRouteView should handle empty route features gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle empty route features gracefully"
        }
      ],
      "endTime": 1759581182793,
      "message": "",
      "name": "/home/jsnni/projects/web-apps/Kid-Friendly-Map-v1/__tests__/MapLibreRouteView.test.tsx",
      "startTime": 1759581182718,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Enhanced Navigation Store"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Enhanced Navigation Store should initialize with default values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should initialize with default values"
        },
        {
          "ancestorTitles": ["Enhanced Navigation Store"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Enhanced Navigation Store should set origin and destination",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should set origin and destination"
        },
        {
          "ancestorTitles": ["Enhanced Navigation Store"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Enhanced Navigation Store should update routing preferences",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should update routing preferences"
        },
        {
          "ancestorTitles": ["Enhanced Navigation Store"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Enhanced Navigation Store should toggle advanced routing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should toggle advanced routing"
        },
        {
          "ancestorTitles": ["Enhanced Navigation Store"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Enhanced Navigation Store should update accessibility settings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should update accessibility settings"
        }
      ],
      "endTime": 1759581183120,
      "message": "",
      "name": "/home/jsnni/projects/web-apps/Kid-Friendly-Map-v1/__tests__/navigation-store-integration.test.ts",
      "startTime": 1759581182815,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Android Platform Tests", "Android-specific Features"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android-specific Features should handle Android permissions correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Android permissions correctly"
        },
        {
          "ancestorTitles": ["Android Platform Tests", "Android-specific Features"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android-specific Features should use Android-specific UI components",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use Android-specific UI components"
        },
        {
          "ancestorTitles": ["Android Platform Tests", "Android-specific Features"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android-specific Features should handle Android navigation bar",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Android navigation bar"
        },
        {
          "ancestorTitles": ["Android Platform Tests", "Android-specific Features"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android-specific Features should handle Android back button",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Android back button"
        },
        {
          "ancestorTitles": ["Android Platform Tests", "Android Safety Features"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android Safety Features should handle Android location services",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Android location services"
        },
        {
          "ancestorTitles": ["Android Platform Tests", "Android Safety Features"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android Safety Features should integrate with Android emergency features",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should integrate with Android emergency features"
        },
        {
          "ancestorTitles": ["Android Platform Tests", "Android Performance"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android Performance should optimize for Android devices",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should optimize for Android devices"
        },
        {
          "ancestorTitles": ["Android Platform Tests", "Android Performance"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android Performance should handle Android memory management",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Android memory management"
        },
        {
          "ancestorTitles": ["Android Platform Tests", "Android Accessibility"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android Accessibility should support Android accessibility features",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should support Android accessibility features"
        },
        {
          "ancestorTitles": ["Android Platform Tests", "Android Notifications"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android Notifications should handle Android notification channels",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Android notification channels"
        }
      ],
      "endTime": 1759581183164,
      "message": "",
      "name": "/home/jsnni/projects/web-apps/Kid-Friendly-Map-v1/__tests__/platform/android.test.js",
      "startTime": 1759581183126,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["iOS Platform Tests", "iOS-specific Features"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "iOS Platform Tests iOS-specific Features should handle iOS permissions correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle iOS permissions correctly"
        },
        {
          "ancestorTitles": ["iOS Platform Tests", "iOS-specific Features"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "iOS Platform Tests iOS-specific Features should use iOS-specific UI components",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use iOS-specific UI components"
        },
        {
          "ancestorTitles": ["iOS Platform Tests", "iOS-specific Features"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "iOS Platform Tests iOS-specific Features should handle iOS safe area correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle iOS safe area correctly"
        },
        {
          "ancestorTitles": ["iOS Platform Tests", "iOS-specific Features"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "iOS Platform Tests iOS-specific Features should handle iOS haptic feedback",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle iOS haptic feedback"
        },
        {
          "ancestorTitles": ["iOS Platform Tests", "iOS Safety Features"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "iOS Platform Tests iOS Safety Features should handle iOS location services",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle iOS location services"
        },
        {
          "ancestorTitles": ["iOS Platform Tests", "iOS Safety Features"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "iOS Platform Tests iOS Safety Features should integrate with iOS emergency features",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should integrate with iOS emergency features"
        },
        {
          "ancestorTitles": ["iOS Platform Tests", "iOS Performance"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "iOS Platform Tests iOS Performance should optimize for iOS devices",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should optimize for iOS devices"
        },
        {
          "ancestorTitles": ["iOS Platform Tests", "iOS Accessibility"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "iOS Platform Tests iOS Accessibility should support iOS accessibility features",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should support iOS accessibility features"
        }
      ],
      "endTime": 1759581183209,
      "message": "",
      "name": "/home/jsnni/projects/web-apps/Kid-Friendly-Map-v1/__tests__/platform/ios.test.js",
      "startTime": 1759581183166,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Android Platform Tests", "Android-specific Features"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android-specific Features should handle Android permissions correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Android permissions correctly"
        },
        {
          "ancestorTitles": ["Android Platform Tests", "Android-specific Features"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android-specific Features should use Android-specific UI components",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use Android-specific UI components"
        },
        {
          "ancestorTitles": ["Android Platform Tests", "Android-specific Features"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android-specific Features should handle Android navigation bar",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Android navigation bar"
        },
        {
          "ancestorTitles": ["Android Platform Tests", "Android-specific Features"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android-specific Features should handle Android back button",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Android back button"
        },
        {
          "ancestorTitles": ["Android Platform Tests", "Android Safety Features"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android Safety Features should handle Android location services",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Android location services"
        },
        {
          "ancestorTitles": ["Android Platform Tests", "Android Safety Features"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android Safety Features should integrate with Android emergency features",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should integrate with Android emergency features"
        },
        {
          "ancestorTitles": ["Android Platform Tests", "Android Performance"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android Performance should optimize for Android devices",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should optimize for Android devices"
        },
        {
          "ancestorTitles": ["Android Platform Tests", "Android Performance"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android Performance should handle Android memory management",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Android memory management"
        },
        {
          "ancestorTitles": ["Android Platform Tests", "Android Accessibility"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android Accessibility should support Android accessibility features",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should support Android accessibility features"
        },
        {
          "ancestorTitles": ["Android Platform Tests", "Android Notifications"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Android Platform Tests Android Notifications should handle Android notification channels",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Android notification channels"
        }
      ],
      "endTime": 1759581183258,
      "message": "",
      "name": "/home/jsnni/projects/web-apps/Kid-Friendly-Map-v1/__tests__/platform/android.test.ts",
      "startTime": 1759581183211,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["iOS Platform Tests", "iOS-specific Features"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "iOS Platform Tests iOS-specific Features should handle iOS permissions correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle iOS permissions correctly"
        },
        {
          "ancestorTitles": ["iOS Platform Tests", "iOS-specific Features"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "iOS Platform Tests iOS-specific Features should use iOS-specific UI components",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use iOS-specific UI components"
        },
        {
          "ancestorTitles": ["iOS Platform Tests", "iOS-specific Features"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "iOS Platform Tests iOS-specific Features should handle iOS safe area correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle iOS safe area correctly"
        },
        {
          "ancestorTitles": ["iOS Platform Tests", "iOS-specific Features"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "iOS Platform Tests iOS-specific Features should handle iOS haptic feedback",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle iOS haptic feedback"
        },
        {
          "ancestorTitles": ["iOS Platform Tests", "iOS Safety Features"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "iOS Platform Tests iOS Safety Features should handle iOS location services",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle iOS location services"
        },
        {
          "ancestorTitles": ["iOS Platform Tests", "iOS Safety Features"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "iOS Platform Tests iOS Safety Features should integrate with iOS emergency features",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should integrate with iOS emergency features"
        },
        {
          "ancestorTitles": ["iOS Platform Tests", "iOS Performance"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "iOS Platform Tests iOS Performance should optimize for iOS devices",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should optimize for iOS devices"
        },
        {
          "ancestorTitles": ["iOS Platform Tests", "iOS Accessibility"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "iOS Platform Tests iOS Accessibility should support iOS accessibility features",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should support iOS accessibility features"
        }
      ],
      "endTime": 1759581183298,
      "message": "",
      "name": "/home/jsnni/projects/web-apps/Kid-Friendly-Map-v1/__tests__/platform/ios.test.ts",
      "startTime": 1759581183260,
      "status": "passed",
      "summary": ""
    }
  ],
  "wasInterrupted": false
}
